within NEUP.FMUs;
model BOP_FMU_v1
  TRANSFORM.Fluid.Interfaces.FluidPort_Flow port_a(redeclare package Medium =
        Modelica.Media.Water.StandardWater)
    annotation (Placement(transformation(extent={{-300,96},{-280,116}}),
        iconTransformation(extent={{-300,96},{-280,116}})));
  TRANSFORM.Fluid.Interfaces.FluidPort_State port_b(redeclare package Medium =
        Modelica.Media.Water.StandardWater)
    annotation (Placement(transformation(extent={{-262,-164},{-242,-144}}),
        iconTransformation(extent={{-262,-164},{-242,-144}})));
  TRANSFORM.Fluid.Machines.SteamTurbine HPTurbine(redeclare package Medium =
        Modelica.Media.Water.StandardWater,
    p_a_start(displayUnit="MPa") = 3500000,
    p_b_start(displayUnit="MPa") = 1000000,
    use_T_start=false,
    h_a_start=3e6,
    m_flow_start=67,                        use_Stodola=false)
    annotation (Placement(transformation(extent={{24,78},{44,98}})));
  TRANSFORM.Fluid.Machines.SteamTurbine LPTurbine(redeclare package Medium =
        Modelica.Media.Water.StandardWater,
    p_a_start(displayUnit="MPa") = 1000000,
    p_b_start(displayUnit="kPa") = 10000,
    use_T_start=false,
    h_a_start=2.7e6,
    m_flow_start=(1 - 0.18)*67,             use_Stodola=false)
    annotation (Placement(transformation(extent={{142,78},{162,98}})));
  TRANSFORM.Fluid.Machines.Pump_SimpleMassFlow Cond_Pump(redeclare package
      Medium = Modelica.Media.Water.StandardWater, m_flow_nominal=(1 - 0.18)*67)
    annotation (Placement(transformation(extent={{140,-194},{120,-174}})));
  TRANSFORM.Fluid.Volumes.IdealCondenser condenser(redeclare package Medium =
        Modelica.Media.Water.StandardWater, p(displayUnit="kPa") = 10000)
    annotation (Placement(transformation(extent={{160,-164},{180,-144}})));
  Modelica.Fluid.Fittings.TeeJunctionVolume teeJunctionVolume(redeclare package
      Medium = Modelica.Media.Water.StandardWater,
    p_start(displayUnit="MPa") = 1000000,
    use_T_start=false,
    h_start=2.7e6,
    V=1)
    annotation (Placement(transformation(extent={{98,104},{78,84}})));
  TRANSFORM.Fluid.FittingsAndResistances.NominalLoss Bleed(redeclare package
      Medium = Modelica.Media.Water.StandardWater,
    dp_nominal(displayUnit="Pa") = 1e4,
    m_flow_nominal=0.18*67,
    p_nominal(displayUnit="Pa") = 1e6,
    T_nominal=726.15)                              annotation (Placement(
        transformation(
        extent={{10,10},{-10,-10}},
        rotation=90,
        origin={88,24})));
  TRANSFORM.Fluid.Volumes.MixingVolume OFWH(
    redeclare package Medium = Modelica.Media.Water.StandardWater,
    p_start(displayUnit="MPa") = 1000000,
    use_T_start=false,
    h_start=data.h_steam_cold,
    redeclare model Geometry =
        TRANSFORM.Fluid.ClosureRelations.Geometry.Models.LumpedVolume.GenericVolume
        (V=1),
    nPorts_b=2,
    nPorts_a=1)
    annotation (Placement(transformation(extent={{44,-192},{64,-172}})));
  TRANSFORM.Electrical.PowerConverters.Generator generator
    annotation (Placement(transformation(extent={{180,78},{200,98}})));
  TRANSFORM.Electrical.Sources.FrequencySource
                            boundary
    annotation (Placement(transformation(extent={{290,78},{270,98}})));
  TRANSFORM.Electrical.Sensors.PowerSensor sensorW
    annotation (Placement(transformation(extent={{224,78},{244,98}})));
  NHES.Systems.PrimaryHeatSystem.SMR_Generic.Components.Data.Data_GenericModule
                                     data(length_steamGenerator_tube=36)
    annotation (Placement(transformation(extent={{284,180},{300,196}})));
  TRANSFORM.Fluid.Machines.Pump_SimpleMassFlow Cond_Pump1(
    redeclare package Medium = Modelica.Media.Water.StandardWater,
    use_input=true,
    m_flow_nominal=67)
    annotation (Placement(transformation(extent={{34,-192},{14,-172}})));
  Modelica.Blocks.Interfaces.RealInput FW_Pump annotation (Placement(
        transformation(extent={{68,-168},{38,-138}}), iconTransformation(extent={{-15,-15},
            {15,15}},
        rotation=90,
        origin={115,-105})));
  Modelica.Fluid.Sensors.MassFlowRate massFlowRate_fwp(redeclare package Medium
      = Modelica.Media.Water.StandardWater, allowFlowReversal=false)
    annotation (Placement(transformation(extent={{-44,-192},{-64,-172}})));
  Modelica.Fluid.Sensors.MassFlowRate massFlowRate_steam(redeclare package
      Medium = Modelica.Media.Water.StandardWater, allowFlowReversal=false)
    annotation (Placement(transformation(extent={{-8,84},{12,104}})));
  Modelica.Fluid.Sensors.Pressure pressure_Tvalve(redeclare package Medium =
        Modelica.Media.Water.StandardWater)
    annotation (Placement(transformation(extent={{-34,94},{-14,114}})));
  TRANSFORM.Fluid.Volumes.SimpleVolume volume(redeclare package Medium =
        Modelica.Media.Water.StandardWater)
    annotation (Placement(transformation(extent={{-262,86},{-242,106}})));
  Modelica.Blocks.Interfaces.RealInput T_valve1 annotation (Placement(
        transformation(extent={{-286,134},{-266,154}}), iconTransformation(
          extent={{14,-14},{-14,14}},
        rotation=90,
        origin={-260,156})));
  TRANSFORM.Fluid.Valves.ValveCompressible TCV3(
    redeclare package Medium = Modelica.Media.Water.StandardWater,
    dp_nominal=100000,
    m_flow_nominal=67,
    p_nominal=2768700)
    annotation (Placement(transformation(extent={{-160,-112},{-140,-92}})));
  Modelica.Blocks.Sources.RealExpression Sensor_W(y=sensorW.y)
    annotation (Placement(transformation(extent={{-10,-10},{10,10}},
        rotation=-90,
        origin={290,-134})));
  Modelica.Blocks.Interfaces.RealOutput W_Sensor
    annotation (Placement(transformation(extent={{-10,-10},{10,10}},
        rotation=-90,
        origin={290,-180}),
        iconTransformation(
        extent={{-10,-10},{10,10}},
        rotation=-90,
        origin={-166,-110})));
  TRANSFORM.Fluid.Volumes.SimpleVolume pre_leak_vol3(redeclare package Medium
      = Modelica.Media.Water.StandardWater, showName=false)
    annotation (Placement(transformation(extent={{-128,-112},{-108,-92}})));
  TRANSFORM.Fluid.BoundaryConditions.FixedBoundary leak_boundary3(
    redeclare package Medium = Modelica.Media.Water.StandardWater,
    T=673.15,
    nPorts=1) annotation (Placement(transformation(
        extent={{-10,10},{10,-10}},
        rotation=180,
        origin={12,-116})));
  TRANSFORM.Fluid.FittingsAndResistances.NominalLoss leak_resistor3(
    redeclare package Medium = Modelica.Media.Water.StandardWater,  showName=
        false, showDP=false)
    annotation (Placement(transformation(extent={{-34,-126},{-14,-106}})));
  TRANSFORM.Fluid.FittingsAndResistances.MultiPort multiPort3(redeclare package
      Medium = Modelica.Media.Water.StandardWater, nPorts_b=2)
    annotation (Placement(transformation(extent={{-100,-112},{-92,-92}})));
  TRANSFORM.Fluid.Machines.Pump_SimpleMassFlow pump3(
    redeclare package Medium = Modelica.Media.Water.StandardWater,
                                                     use_input=true,
      m_flow_nominal=0.16)
    annotation (Placement(transformation(extent={{-70,-106},{-50,-126}})));
  Modelica.Fluid.Sensors.MassFlowRate TCV3_mdot(redeclare package Medium =
        Modelica.Media.Water.StandardWater, allowFlowReversal=false)
    annotation (Placement(transformation(extent={{-7,-7},{7,7}},
        rotation=90,
        origin={-27,-63})));
  Modelica.Blocks.Sources.Ramp leak_ramp3(height=0, duration=1.2e6) annotation
    (Placement(transformation(
        extent={{-9,-9},{9,9}},
        rotation=0,
        origin={-117,-133})));
  Modelica.Blocks.Math.Product PID_prod3 annotation (Placement(transformation(
        extent={{-7,7},{7,-7}},
        rotation=0,
        origin={-201,-87})));
  Modelica.Blocks.Sources.Ramp actuator_ramp3(
    height=0,
    duration=1.2e6,
    offset=1) annotation (Placement(transformation(
        extent={{-9,-9},{9,9}},
        rotation=0,
        origin={-271,-89})));
  Modelica.Blocks.Sources.Ramp actuator_ramp2(
    height=0,
    duration=1.2e6,
    offset=1) annotation (Placement(transformation(
        extent={{-9,-9},{9,9}},
        rotation=0,
        origin={-271,5})));
  Modelica.Blocks.Math.Product PID_prod2
                                        annotation (Placement(transformation(
        extent={{-7,7},{7,-7}},
        rotation=0,
        origin={-183,7})));
  TRANSFORM.Fluid.Valves.ValveCompressible TCV2(
    redeclare package Medium = Modelica.Media.Water.StandardWater,
    dp_nominal=100000,
    m_flow_nominal=67,
    p_nominal=2768700)
    annotation (Placement(transformation(extent={{-160,-18},{-140,2}})));
  TRANSFORM.Fluid.Volumes.SimpleVolume pre_leak_vol2(redeclare package Medium
      = Modelica.Media.Water.StandardWater, showName=false)
    annotation (Placement(transformation(extent={{-130,-18},{-110,2}})));
  TRANSFORM.Fluid.BoundaryConditions.FixedBoundary leak_boundary2(
    redeclare package Medium = Modelica.Media.Water.StandardWater,
    T=673.15,
    nPorts=1) annotation (Placement(transformation(
        extent={{-10,10},{10,-10}},
        rotation=0,
        origin={-88,-60})));
  TRANSFORM.Fluid.FittingsAndResistances.NominalLoss leak_resistor2(
    redeclare package Medium = Modelica.Media.Water.StandardWater,  showName=
        false, showDP=false)
    annotation (Placement(transformation(extent={{-10,-10},{10,10}},
        rotation=-90,
        origin={-52,-32})));
  TRANSFORM.Fluid.FittingsAndResistances.MultiPort multiPort2(redeclare package
      Medium = Modelica.Media.Water.StandardWater, nPorts_b=2)
    annotation (Placement(transformation(extent={{-104,-18},{-96,2}})));
  TRANSFORM.Fluid.Machines.Pump_SimpleMassFlow pump2(
    redeclare package Medium = Modelica.Media.Water.StandardWater,
                                                     use_input=true,
      m_flow_nominal=0.16)
    annotation (Placement(transformation(extent={{-82,0},{-62,-20}})));
  Modelica.Blocks.Sources.Ramp leak_ramp2(height=0,
    duration=1.2e6) annotation (Placement(transformation(
        extent={{-9,-9},{9,9}},
        rotation=0,
        origin={-119,-35})));
  Modelica.Fluid.Sensors.MassFlowRate TCV2_mdot(redeclare package Medium =
        Modelica.Media.Water.StandardWater, allowFlowReversal=false)
    annotation (Placement(transformation(extent={{-68,14},{-54,28}})));
  Modelica.Blocks.Sources.Ramp actuator_ramp1(
    height=0,
    duration=1.2e6,
    offset=1)       annotation (Placement(transformation(
        extent={{9,9},{-9,-9}},
        rotation=180,
        origin={-271,73})));
  Modelica.Blocks.Math.Product PID_prod1 annotation (Placement(transformation(
        extent={{-7,-7},{7,7}},
        rotation=0,
        origin={-183,69})));
  TRANSFORM.Fluid.Valves.ValveCompressible TCV1(
    redeclare package Medium = Modelica.Media.Water.StandardWater,
    dp_nominal=100000,
    m_flow_nominal=67,
    p_nominal=2768700)
    annotation (Placement(transformation(extent={{-160,106},{-140,86}})));
  TRANSFORM.Fluid.Volumes.SimpleVolume pre_leak_vol1(redeclare package Medium
      = Modelica.Media.Water.StandardWater, showName=false)
    annotation (Placement(transformation(extent={{-130,86},{-110,106}})));
  TRANSFORM.Fluid.BoundaryConditions.FixedBoundary leak_boundary1(
    redeclare package Medium = Modelica.Media.Water.StandardWater,
    T=673.15,
    nPorts=1) annotation (Placement(transformation(
        extent={{-10,10},{10,-10}},
        rotation=180,
        origin={22,150})));
  TRANSFORM.Fluid.FittingsAndResistances.NominalLoss leak_resistor1(
    redeclare package Medium = Modelica.Media.Water.StandardWater,
    showName=false,
    showDP=false)
    annotation (Placement(transformation(extent={{-36,140},{-16,160}})));
  TRANSFORM.Fluid.FittingsAndResistances.MultiPort multiPort1(redeclare package
      Medium = Modelica.Media.Water.StandardWater, nPorts_b=2)
    annotation (Placement(transformation(extent={{-100,106},{-92,86}})));
  TRANSFORM.Fluid.Machines.Pump_SimpleMassFlow pump1(
    redeclare package Medium = Modelica.Media.Water.StandardWater,
    use_input=true,
    m_flow_nominal=0.16)
    annotation (Placement(transformation(extent={{-74,140},{-54,160}})));
  Modelica.Blocks.Sources.Ramp leak_ramp1(height=0, duration=1.2e6) annotation
    (Placement(transformation(
        extent={{9,-9},{-9,9}},
        rotation=90,
        origin={-63,175})));
  Modelica.Fluid.Sensors.MassFlowRate TCV1_mdot(redeclare package Medium =
        Modelica.Media.Water.StandardWater, allowFlowReversal=false)
    annotation (Placement(transformation(extent={{-68,88},{-54,102}})));
equation
  connect(LPTurbine.shaft_a, HPTurbine.shaft_b)
    annotation (Line(points={{142,88},{44,88}}, color={0,0,0}));
  connect(LPTurbine.shaft_b, generator.shaft)
    annotation (Line(points={{162,88},{180,88}},
                                               color={0,0,0}));
  connect(generator.port, sensorW.port_a)
    annotation (Line(points={{200,88},{224,88}}, color={255,0,0}));
  connect(sensorW.port_b, boundary.port)
    annotation (Line(points={{244,88},{270,88}}, color={255,0,0}));
  connect(HPTurbine.portLP, teeJunctionVolume.port_2)
    annotation (Line(points={{44,94},{78,94}},  color={0,127,255}));
  connect(teeJunctionVolume.port_1, LPTurbine.portHP)
    annotation (Line(points={{98,94},{142,94}},color={0,127,255}));
  connect(LPTurbine.portLP, condenser.port_a)
    annotation (Line(points={{162,94},{162,-144},{164,-144},{164,-142},{163,
          -142},{163,-147}},                            color={0,127,255}));
  connect(condenser.port_b, Cond_Pump.port_a) annotation (Line(points={{170,
          -162},{170,-184},{140,-184}},color={0,127,255}));
  connect(Cond_Pump.port_b, OFWH.port_b[1]) annotation (Line(points={{120,-184},
          {90,-184},{90,-182.5},{60,-182.5}},color={0,127,255}));
  connect(teeJunctionVolume.port_3, Bleed.port_a) annotation (Line(points={{88,84},
          {88,31}},                    color={0,127,255}));
  connect(Bleed.port_b, OFWH.port_b[2]) annotation (Line(points={{88,17},{88,
          -181.5},{60,-181.5}},    color={0,127,255}));
  connect(Cond_Pump1.port_a, OFWH.port_a[1])
    annotation (Line(points={{34,-182},{48,-182}}, color={0,127,255}));
  connect(FW_Pump, Cond_Pump1.in_m_flow) annotation (Line(points={{53,-153},{
          38.5,-153},{38.5,-174.7},{24,-174.7}}, color={0,0,127}));
  connect(Cond_Pump1.port_b, massFlowRate_fwp.port_a) annotation (Line(points={{14,-182},
          {-44,-182}},                               color={0,127,255}));
  connect(massFlowRate_fwp.port_b, port_b) annotation (Line(points={{-64,-182},
          {-238,-182},{-238,-154},{-252,-154}},
                                             color={0,127,255}));
  connect(massFlowRate_steam.port_b, HPTurbine.portHP) annotation (Line(points={{12,94},
          {24,94}},                               color={0,127,255}));
  connect(pressure_Tvalve.port, massFlowRate_steam.port_a)
    annotation (Line(points={{-24,94},{-8,94}},    color={0,127,255}));
  connect(port_a, volume.port_a)
    annotation (Line(points={{-290,106},{-270,106},{-270,96},{-258,96}},
                                                   color={0,127,255}));
  connect(volume.port_b, TCV3.port_a) annotation (Line(points={{-246,96},{-246,
          -102},{-160,-102}},       color={0,127,255}));
  connect(Sensor_W.y, W_Sensor)
    annotation (Line(points={{290,-145},{290,-180}},color={0,0,127}));
  connect(pre_leak_vol3.port_b, multiPort3.port_a)
    annotation (Line(points={{-112,-102},{-100,-102}}, color={0,127,255}));
  connect(leak_resistor3.port_a,pump3. port_b)
    annotation (Line(points={{-31,-116},{-50,-116}},
                                                  color={0,127,255}));
  connect(leak_resistor3.port_b, leak_boundary3.ports[1])
    annotation (Line(points={{-17,-116},{2,-116}}, color={0,127,255}));
  connect(TCV3.port_b, pre_leak_vol3.port_a)
    annotation (Line(points={{-140,-102},{-124,-102}}, color={0,127,255}));
  connect(TCV3_mdot.port_b, pressure_Tvalve.port) annotation (Line(points={{-27,-56},
          {-27,90},{-24,90},{-24,94}},   color={0,127,255}));
  connect(multiPort3.ports_b[1], TCV3_mdot.port_a) annotation (Line(points={{
          -92,-100},{-27,-100},{-27,-70}}, color={0,127,255}));
  connect(pump3.port_a, multiPort3.ports_b[2]) annotation (Line(points={{-70,
          -116},{-82,-116},{-82,-104},{-92,-104}}, color={0,127,255}));
  connect(TCV3.opening, PID_prod3.y) annotation (Line(points={{-150,-94},{-150,
          -87},{-193.3,-87}}, color={0,0,127}));
  connect(T_valve1, PID_prod3.u2) annotation (Line(points={{-276,144},{-210,144},
          {-210,-78},{-209.4,-78},{-209.4,-82.8}}, color={0,0,127}));
  connect(leak_ramp3.y, pump3.in_m_flow) annotation (Line(points={{-107.1,-133},
          {-76,-133},{-76,-132},{-60,-132},{-60,-123.3}}, color={0,0,127}));
  connect(actuator_ramp3.y, PID_prod3.u1) annotation (Line(points={{-261.1,-89},
          {-261.1,-91.2},{-209.4,-91.2}}, color={0,0,127}));
  connect(actuator_ramp2.y, PID_prod2.u1) annotation (Line(points={{-261.1,5},{
          -261.1,2.8},{-191.4,2.8}}, color={0,0,127}));
  connect(TCV2.opening,PID_prod2. y) annotation (Line(points={{-150,0},{-150,7},
          {-175.3,7}},      color={0,0,127}));
  connect(TCV2.port_b,pre_leak_vol2. port_a)
    annotation (Line(points={{-140,-8},{-126,-8}}, color={0,127,255}));
  connect(leak_resistor2.port_a,pump2. port_b)
    annotation (Line(points={{-52,-25},{-52,-10},{-62,-10}},
                                                  color={0,127,255}));
  connect(leak_resistor2.port_b,leak_boundary2. ports[1]) annotation (Line(
        points={{-52,-39},{-52,-60},{-78,-60}},           color={0,127,255}));
  connect(multiPort2.ports_b[1], TCV2_mdot.port_a) annotation (Line(points={{-96,-6},
          {-88,-6},{-88,21},{-68,21}},                          color={0,127,
          255}));
  connect(pump2.port_a,multiPort2. ports_b[2]) annotation (Line(points={{-82,-10},
          {-96,-10}},                                      color={0,127,255}));
  connect(leak_ramp2.y, pump2.in_m_flow) annotation (Line(points={{-109.1,-35},
          {-72,-35},{-72,-17.3}},              color={0,0,127}));
  connect(pre_leak_vol2.port_b,multiPort2. port_a)
    annotation (Line(points={{-114,-8},{-104,-8}}, color={0,127,255}));
  connect(actuator_ramp1.y, PID_prod1.u1) annotation (Line(points={{-261.1,73},
          {-196,73},{-196,73.2},{-191.4,73.2}}, color={0,0,127}));
  connect(TCV1.opening, PID_prod1.y) annotation (Line(points={{-150,88},{-150,
          68},{-175.3,68},{-175.3,69}}, color={0,0,127}));
  connect(TCV1.port_b, pre_leak_vol1.port_a)
    annotation (Line(points={{-140,96},{-126,96}}, color={0,127,255}));
  connect(leak_resistor1.port_a, pump1.port_b)
    annotation (Line(points={{-33,150},{-54,150}}, color={0,127,255}));
  connect(leak_resistor1.port_b, leak_boundary1.ports[1])
    annotation (Line(points={{-19,150},{12,150}}, color={0,127,255}));
  connect(multiPort1.ports_b[1], TCV1_mdot.port_a)
    annotation (Line(points={{-92,94},{-68,95}}, color={0,127,255}));
  connect(pump1.port_a, multiPort1.ports_b[2]) annotation (Line(points={{-74,
          150},{-84,150},{-84,98},{-92,98}}, color={0,127,255}));
  connect(leak_ramp1.y, pump1.in_m_flow) annotation (Line(points={{-63,165.1},{
          -64,165.1},{-64,157.3}}, color={0,0,127}));
  connect(pre_leak_vol1.port_b, multiPort1.port_a)
    annotation (Line(points={{-114,96},{-100,96}}, color={0,127,255}));
  connect(PID_prod2.u2, T_valve1) annotation (Line(points={{-191.4,11.2},{-210,
          11.2},{-210,144},{-276,144}}, color={0,0,127}));
  connect(TCV2.port_a, volume.port_b) annotation (Line(points={{-160,-8},{-246,
          -8},{-246,96}}, color={0,127,255}));
  connect(volume.port_b, TCV1.port_a) annotation (Line(points={{-246,96},{-160,
          96}},                                            color={0,127,255}));
  connect(T_valve1, PID_prod1.u2) annotation (Line(points={{-276,144},{-210,144},
          {-210,64.8},{-191.4,64.8}}, color={0,0,127}));
  connect(TCV2_mdot.port_b, pressure_Tvalve.port) annotation (Line(points={{-54,21},
          {-26,21},{-26,94},{-24,94}},                           color={0,127,
          255}));
  connect(TCV1_mdot.port_b, pressure_Tvalve.port) annotation (Line(points={{-54,95},
          {-54,94},{-24,94}},                        color={0,127,255}));
  annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-320,
            -200},{320,200}}), graphics={Bitmap(extent={{-344,-116},{202,164}},
            fileName="modelica://NEUP/../../BOP.png")}),         Diagram(
        coordinateSystem(preserveAspectRatio=false, extent={{-320,-200},{320,
            200}})));
end BOP_FMU_v1;
